---
import { db, brawls } from '../../lib/db';
import { eq } from 'drizzle-orm';
import '../../styles/global.css';
import FightPage from '../../components/FightPage';
import type { Brawl, Character, Attack } from '../../lib/db/schema';

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/');
}

const brawl = await db.query.brawls.findFirst({
  where: eq(brawls.slug, slug),
  with: {
    characters: {
      with: {
        attacks: true,
      },
    },
  },
});

if (!brawl) {
  return Astro.redirect('/');
}

const isWaitingForChallengee = brawl.characters.length < 2;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Nature Brawl - {slug}</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
    </style>
  </head>
  <body class="title-screen pokemon-container">
    <div class="container mx-auto px-4 py-8 relative z-10">
      <div class="text-center mb-8">
        <h1 class="title-logo text-4xl font-bold text-white mb-4">
          ðŸŒ¿ NATURE BRAWL ðŸ¥Š
        </h1>
        <div class="pokemon-window inline-block px-4 py-2">
          <p class="text-xs text-black font-bold">
            CHALLENGE: {slug.toUpperCase()}
          </p>
        </div>
      </div>

      <div class="max-w-4xl mx-auto">
        <div class="pokemon-border p-8 relative z-10">
          <FightPage
            client:load
            slug={slug}
            initialIsWaiting={isWaitingForChallengee}
            brawl={brawl}
            browserId="BROWSER_DETERMINED"
          />
        </div>
      </div>
    </div>

    <script>
      // Get or create browser ID
      if (!localStorage.getItem('naturebrawl.browserId')) {
        localStorage.setItem('naturebrawl.browserId', crypto.randomUUID());
      }
    </script>
  </body>
</html>
